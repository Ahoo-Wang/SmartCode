@using SmartCode
@using SmartCode.Db
@using SmartCode.Generator.Entity
@model BuildContext
@{
    var project = Model.Project;
    var buildTask = Model.Build;
    var table = Model.GetCurrentTable();
    var pkCols = table.Columns.Where(col => col.IsPrimaryKey);
    var normalCols = table.Columns.Where(col => !col.IsPrimaryKey);
    var newLine = Environment.NewLine;
}
@functions {

    public string ConvertLangType(Column column) {
        if (String.IsNullOrEmpty(column.LanguageType)) {
            return "NAType";
        }
        if (!column.IsNullable) {
            return column.LanguageType;
        }

        if (column.LanguageType.Contains("[]") || column.LanguageType.ToLower() == "string") {
            return column.LanguageType;
        }
        return $"{column.LanguageType}?";
    }

}
using System;

namespace @(project.Module).@(buildTask.Module).Entities {

    @($"/// <summary>{table.Description ?? table.ConvertedName}</summary>")
    public partial class @table.ConvertedName {

    @foreach (var col in pkCols) {
        @(Html.PadLeft(8) + $"/// <summary>{col.Description ?? col.Name}</summary>{newLine}")
        @(Html.PadLeft(8) + $"public virtual {ConvertLangType(col)} {col.ConvertedName} {{ get; set; }}{newLine}")
    }

    @foreach (var col in normalCols) {
        @(Html.PadLeft(8) + $"/// <summary>{col.Description ?? col.Name}</summary>{newLine}")
        @(Html.PadLeft(8) + $"public virtual {ConvertLangType(col)} {col.ConvertedName} {{ get; set; }}{newLine}")
    }

    }

}
