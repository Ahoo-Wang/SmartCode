@using SmartCode
@using SmartCode.Db
@using SmartCode.Generator.Entity
@model BuildContext
@{
    var project = Model.Project;
    var buildTask = Model.Build;
    var table = Model.GetCurrentTable();
    var pkCols = table.Columns.Where(col => col.IsPrimaryKey).ToArray();
    var pkCount = pkCols.Count();
    var firstPk = pkCols.First();
    var normalCols = table.Columns.Where(col => !col.IsPrimaryKey);
    var newLine = Environment.NewLine;
}
@functions {

    public string ConvertLangType(Column column) {
        if (String.IsNullOrEmpty(column.LanguageType)) {
            return "NAType";
        }
        if (!column.IsNullable) {
            return column.LanguageType;
        }

        if (column.LanguageType.Contains("[]") || column.LanguageType.ToLower() == "string") {
            return column.LanguageType;
        }
        return $"{column.LanguageType}?";
    }

}
using Beginor.AppFx.Core;
using @(project.Module).@(buildTask.Module).Entities;

namespace @(project.Module).@(buildTask.Module).Repositories {

    public partial interface I@(table.ConvertedName)Repository : IRepository<@(table.ConvertedName)Entity, @(ConvertLangType(firstPk))> {

    }

}
